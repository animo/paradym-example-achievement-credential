version: "3.5"

services:
  server:
    image: ghcr.io/animo/paradym-example-achievement-credential/server:main
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.labels.type == community
      labels:
        traefik.enable: "true"

        traefik.http.routers.snake-demo-server.rule: Host(`snake-demo-server.paradym.id`)
        traefik.http.routers.snake-demo-server.entrypoints: web-secure
        traefik.http.routers.snake-demo-server.tls.certresolver: zerossl
        traefik.http.routers.snake-demo-server.service: snake-demo-server-service
        traefik.http.services.snake-demo-server-service.loadbalancer.server.port: 5000

    environment:
      PARADYM_API_KEY: ${PARADYM_API_KEY}
      PARADYM_HMAC_SIGNATURE: ${PARADYM_HMAC_SIGNATURE}
      PARADYM_WORKFLOW_ID: ${PARADYM_WORKFLOW_ID}
      PORT: 5000

    networks:
      - traefik

    ports:
      - 5000

  client:
    image: ghcr.io/animo/paradym-example-achievement-credential/client:main
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.labels.type == community
      labels:
        traefik.enable: "true"
        traefik.http.routers.snake-demo.rule: Host(`snake-demo.paradym.id`)
        traefik.http.routers.snake-demo.entrypoints: web-secure
        traefik.http.routers.snake-demo.tls.certresolver: zerossl
        traefik.http.routers.snake-demo.service: snake-demo-service
        traefik.http.services.snake-demo-service.loadbalancer.server.port: 80
      update_config:
        monitor: 30s
        delay: 10s
        order: start-first
    ports:
      - 80
    networks:
      - traefik

networks:
  traefik:
    external: true
    name: traefik
